import pygameimport timeimport datetimeimport osimport timerimport wallpaper#import camerapreviewx = -2y = 0os.environ['SDL_VIDEO_WINDOW_POS'] = "%d,%d" % (x,y)######## variable decleration and image loading #############pygame.init()display_width = 800display_height = 480black = (64,64,64)white = (255,255,255)line=(255,204,255)red = (200,0,0)bright_red=(255,0,0)light_blue=(0,128,255)bright_green=(0,255,0)violet=(147,112,219)values=[5,5,5,10]Display = pygame.display.set_mode((display_width,display_height))pygame.display.set_caption('control panel')icon = pygame.image.load("icon.png")pygame.display.set_icon(icon)pygame.display.update()clock = pygame.time.Clock()#pygame.mouse.set_visible(False)button1_img= pygame.image.load("light.png").convert_alpha()button2_img= pygame.image.load("fan.png").convert_alpha()button3_img= pygame.image.load("plug.png").convert_alpha()button4_img= pygame.image.load("microphone.png").convert_alpha()button5_img= pygame.image.load("camera.png").convert_alpha()button6_img= pygame.image.load("timer.png").convert_alpha()button7_img= pygame.image.load("lamp.png").convert_alpha()button8_img= pygame.image.load("Ac.png").convert_alpha()button9_img= pygame.image.load("frame.png").convert_alpha()button10_img= pygame.image.load("consumption.png").convert_alpha()rocket=pygame.image.load("rocket.png").convert_alpha()main=Truelight=Truelight1_toggle=Falsefan_toggle=Falseplug_toggle=Falsevoice_toggle=Falsecamera_toggle=Falselight2_toggle=FalseAc_toggle=Falserocket_y=250events=Noneposition=None    ############## button creation and main gui function ###############def text_objects(text, font):    textSurface = font.render(text, True, white)    return textSurface, textSurface.get_rect()def get_events():    global events    events=pygame.event.get()def touch_pos():    for event in events:        if event.type == pygame.MOUSEBUTTONDOWN:            return list(event.pos)def quit_window():    for event in events:        if event.type == pygame.QUIT:            pygame.quit()            quit()def button(msg,x,y,w,h,ic,ac,action=None):    if type(position)==list and x+w > position[0] > x and y+h > position[1] > y and action!=None:        pygame.draw.rect(Display, bright_green,(x,y,w,h))        action(msg)                     elif light1_toggle==True and msg=="light1":             pygame.draw.rect(Display, bright_green,(x,y,w,h))    elif fan_toggle==True and msg=="fan":             pygame.draw.rect(Display, bright_green,(x,y,w,h))    elif plug_toggle==True and msg=="plug":             pygame.draw.rect(Display, bright_green,(x,y,w,h))    elif voice_toggle==True and msg=="voice":             pygame.draw.rect(Display, bright_green,(x,y,w,h))    elif camera_toggle==True and msg=="camera":             pygame.draw.rect(Display, bright_green,(x,y,w,h))    elif timer.timer_toggle==True and msg=="timer":             pygame.draw.rect(Display, bright_green,(x,y,w,h))    elif light2_toggle==True and msg=="light2":             pygame.draw.rect(Display, bright_green,(x,y,w,h))    elif Ac_toggle==True and msg=="Ac":             pygame.draw.rect(Display, bright_green,(x,y,w,h))       else:        pygame.draw.rect(Display, ic,(x,y,w,h))    smallText = pygame.font.Font("COMIC.TTF",25)    textSurf, textRect = text_objects(msg, smallText)    textRect.center = ( (x+(w/2)), (y+(h-19)) )    Display.blit(textSurf, textRect)    def sidewall():    global rocket_y    h_y=rocket_y+53    a_y=rocket_y+73    v_y=rocket_y+97    e_y=rocket_y+120    a1_y=rocket_y+150    n_y=rocket_y+180    i_y=rocket_y+204    c_y=rocket_y+228    e1_y=rocket_y+250    d_y=rocket_y+ 280    a2_y=rocket_y+305    y_y=rocket_y+330    font = pygame.font.Font("design.graffiti.comicsansmsgras.ttf",25)    h=font.render("H", True, white)    a=font.render("A", True, white)    v=font.render("V", True, white)    e=font.render("E", True, white)    n=font.render("N", True, white)    i=font.render("I", True, white)    c=font.render("C", True, white)    d=font.render("D", True, white)    y=font.render("Y", True, white)    pygame.draw.rect(Display,violet,(722,10,68,305))    Display.blit(rocket,[725,rocket_y])    if h_y<290:        Display.blit(h,[746,h_y])    if a_y<290:        Display.blit(a,[746,a_y])    if v_y<290:        Display.blit(v,[746,v_y])    if e_y<290:        Display.blit(e,[746,e_y])    if e_y<290:        Display.blit(e,[746,e_y])    if a1_y<290:        Display.blit(a,[746,a1_y])    if n_y<290:        Display.blit(n,[746,n_y])    if i_y<290:        Display.blit(i,[746,i_y])    if c_y<290:        Display.blit(c,[746,c_y])    if e1_y<290:        Display.blit(e,[746,e1_y])    if d_y<290:        Display.blit(d,[746,d_y])    if a2_y<290:        Display.blit(a,[746,a2_y])    if y_y<300:        Display.blit(y,[746,y_y])    if rocket_y<=-300:        rocket_y=250    rocket_y-=2    def home():    pygame.draw.rect(Display,violet,(366,318,424,151))    currentime = datetime.datetime.time(datetime.datetime.now())    Date=datetime.date.today().strftime("%A")[:3]+" /"+datetime.date.today().strftime("%B")[:3]+" /"+str(datetime.date.today().strftime("%d"))    font = pygame.font.Font(None, 60)    time1= font.render(currentime.strftime("%I:%M %p"), 1, (255,255,255))    date=font.render(Date, True, (255,255,255))    font = pygame.font.Font(None, 90)    text= font.render("LIVING ROOM", True, white)    Display.blit(time1,[505,320])    Display.blit(date,[480,365])    Display.blit(text,[370,410])    ##################### function for buttton ############def photoframe(msg):    wallpaper.wallpaper_window()def on_off_time():    timer.timer_window()  def cameraframe():    print(timer.time_lst)       #camerapreview.cam_window()    def game_loop(msg):    global light1_toggle    global fan_toggle    global plug_toggle    global voice_toggle    global camera_toggle    global light2_toggle    global Ac_toggle    if msg=="light1":       light1_toggle=not light1_toggle    if msg=="fan":        fan_toggle=not fan_toggle    if msg=="plug":        plug_toggle=not plug_toggle    if msg=="voice":        voice_toggle=not voice_toggle    if msg=="camera":        camera_toggle=not camera_toggle        cameraframe()    if msg=="timer":       on_off_time()    if msg=="light2":       light2_toggle=not light2_toggle    if msg=="Ac":       Ac_toggle=not Ac_toggle           ######### main loop ##########def main_window():          while main==True:            global position            get_events()            quit_window()            position=touch_pos()                  Display.fill((255,127,80))            button("light1",10,10,175,151,light_blue,bright_green,game_loop)            button("fan",188,10,175,151,light_blue,bright_red,game_loop)            button("plug",366,10,175,151,light_blue,bright_green,game_loop)            button("voice",544,10,175,151,light_blue,bright_green,game_loop)            button("timer",10,164,175,151,light_blue,bright_green,game_loop)            button("light2",188,164,175,151,light_blue,bright_green,game_loop)            button("Ac",366,164,175,151,light_blue,bright_green,game_loop)            button("camera",544,164,175,151,light_blue,bright_green,game_loop)            button("frame",10,318,175,151,light_blue,bright_green,photoframe)            button("consumption",188,318,175,151,bright_green,bright_green,game_loop)            Display.blit(button1_img,(30,15))            Display.blit(button2_img,(220,14))            Display.blit(button3_img,(390,10))            Display.blit(button4_img,(570,13))            Display.blit(button5_img,(574,168))            Display.blit(button6_img,(20,170))            Display.blit(button7_img,(215,165))            Display.blit(button8_img,(390,165))            Display.blit(button9_img,(40,320))            Display.blit(button10_img,(218,322))            home()            sidewall()            pygame.display.update()            clock.tick(15)                    pygame.quit()        quit()if __name__ == "__main__":     main_window()